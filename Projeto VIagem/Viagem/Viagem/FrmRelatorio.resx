<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>